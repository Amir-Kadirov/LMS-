definitions:
  models.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.Student:
    properties:
      active:
        type: boolean
      age:
        type: integer
      external_id:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      pasword:
        type: string
      phone:
        type: string
    type: object
  models.Subjects:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.Teacher:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      password:
        type: string
      phone:
        type: string
      start_work:
        type: string
      subject_id:
        type: string
    type: object
  models.TimeTable:
    properties:
      from_date:
        type: string
      id:
        type: string
      student_id:
        type: string
      subject_id:
        type: string
      teacherId:
        type: string
      to_date:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /student:
    get:
      description: This API returns all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get a student
      tags:
      - Student
    post:
      consumes:
      - application/json
      description: This api creates a student and returns its id
      parameters:
      - description: student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a student
      tags:
      - Student
  /student/{id}:
    get:
      description: This API get by id a student
      parameters:
      - description: Student Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get by id a student
      tags:
      - Student
  /student/deletstudent/{id}:
    delete:
      description: This API delete a student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a student
      tags:
      - Student
  /student/lesson/{id}:
    get:
      description: This API endpoint checks the lesson of a student by their ID.
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status checked successfully
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Check the lesson of a student
      tags:
      - Student
  /student/status/{id}:
    get:
      description: This API endpoint checks the status of a student by their ID.
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status checked successfully
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Check the status of a student
      tags:
      - Student
  /student/updatestudent/{id}:
    put:
      consumes:
      - application/json
      description: This API updates a student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: Student object to update
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a student
      tags:
      - Student
  /subject:
    get:
      description: This API returns all Subject
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get a Subject
      tags:
      - Subject
    post:
      consumes:
      - application/json
      description: This api creates a subject and returns its id
      parameters:
      - description: subject
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/models.Subjects'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a subject
      tags:
      - Subject
  /subject/{id}:
    get:
      description: This API get by id a subject
      parameters:
      - description: Subject id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get by id a subject
      tags:
      - Subject
  /subject/deletsubject/{id}:
    delete:
      description: This API delete a Subject
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a Subject
      tags:
      - Subject
  /subject/updatesubject/{id}:
    put:
      consumes:
      - application/json
      description: This API updates a Subject
      parameters:
      - description: Subject ID
        in: path
        name: id
        required: true
        type: string
      - description: subject object to update
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/models.Subjects'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a subject
      tags:
      - Subject
  /teacher:
    get:
      description: This API returns all teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get a teacher
      tags:
      - Teacher
    post:
      consumes:
      - application/json
      description: This api creates a teacher and returns its id
      parameters:
      - description: teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a teacher
      tags:
      - Teacher
  /teacher/{id}:
    get:
      description: This API get by id a teacher
      parameters:
      - description: Teacher id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get by id a teacher
      tags:
      - Teacher
  /teacher/deleteteacher/{id}:
    delete:
      description: This API delete a teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a teacher
      tags:
      - Teacher
  /teacher/lesson/{id}:
    get:
      description: This API endpoint checks the lesson of a teacher by their ID.
      parameters:
      - description: teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status checked successfully
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Check the lesson of a teacher
      tags:
      - Teacher
  /teacher/login:
    post:
      consumes:
      - application/json
      description: Teacher login
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Teacher login
      tags:
      - auth
  /teacher/updateteacher/{id}:
    put:
      consumes:
      - application/json
      description: This API updates a Teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      - description: Teacher object to update
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a teacher
      tags:
      - Teacher
  /timetable:
    post:
      consumes:
      - application/json
      description: This api creates a timetable and returns its id
      parameters:
      - description: timetable
        in: body
        name: timetable
        required: true
        schema:
          $ref: '#/definitions/models.TimeTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a timetable
      tags:
      - TimeTable
  /timetable/delettimetable/{id}:
    delete:
      description: This API delete a timetable
      parameters:
      - description: timetable ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a timetable
      tags:
      - TimeTable
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
