definitions:
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.Student:
    properties:
      active:
        type: boolean
      age:
        type: integer
      external_id:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      pasword:
        type: string
      phone:
        type: string
    type: object
  models.Teacher:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      phone:
        type: string
      start_work:
        type: string
      subject_id:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /student:
    get:
      description: This API returns all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get a student
      tags:
      - student
    post:
      consumes:
      - application/json
      description: This api creates a student and returns its id
      parameters:
      - description: student
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a student
      tags:
      - student
  /student/{id}:
    get:
      description: This API get by id a student
      parameters:
      - description: Student ExternalId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get by id a student
      tags:
      - student
  /student/deletstudent/{id}:
    delete:
      description: This API delete a student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete a student
      tags:
      - student
  /student/status/{id}:
    get:
      description: This API endpoint checks the status of a student by their ID.
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status checked successfully
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Check the status of a student
      tags:
      - student
  /student/updatepassword/{id}/{password}:
    put:
      description: This API endpoint updates a student's password by their ID.
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: New Password
        in: path
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update a student's password
      tags:
      - student
  /student/updatestudent/{id}:
    put:
      consumes:
      - application/json
      description: This API updates a student
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: string
      - description: Student object to update
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update a student
      tags:
      - student
  /teacher:
    get:
      description: This API returns all teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get a teacher
      tags:
      - Teacher
    post:
      consumes:
      - application/json
      description: This api creates a teacher and returns its id
      parameters:
      - description: teacher
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a teacher
      tags:
      - Teacher
  /teacher/{id}:
    get:
      description: This API get by id a teacher
      parameters:
      - description: Teacher id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get by id a teacher
      tags:
      - Teacher
  /teacher/deleteteacher/{id}:
    delete:
      description: This API delete a teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete a teacher
      tags:
      - Teacher
  /teacher/updateteacher/{id}:
    put:
      consumes:
      - application/json
      description: This API updates a Teacher
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      - description: Teacher object to update
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update a teacher
      tags:
      - Teacher
swagger: "2.0"
